version: "3.2"
services:
  postgres:
      image: postgres:14.1-alpine
      restart: "always"
      container_name: "pg-nest"
      ports:
        - 5432:5432
      env_file:
        - ".env"
      volumes:
        # keeps the Docker __dir out of the codebase
        - "../../Docker/2022/pg-nest:/var/lib/postgresql/data"
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
      privileged: true
  redis:
    restart: "always"
    container_name: "redis-nest"
    image: "redis:6.2-alpine"
    env_file:
      - ".env"
    privileged: true
    command: redis-server --save 20 1 --loglevel warning --requirepass Dillard20!8!
    ports:
      - ${REDIS_PORTS}
    volumes:
      - ../../../Docker/2022/redis-nest:/var/lib/redis
      - ../../../Docker/2022/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_REPLICATION_MODE=${REDIS_REPLICATION_ENV}
    networks:
      node_net:
        ipv4_address: ${REDIS_IPV4_ADDY}
# networking for the Redis container
networks:
  node_net:
    ipam:
      driver: ${REDIS_IPAM_DRIVER}
      config:
        - subnet: ${REDIS_IPAM_CONFIG_SUBNET}
# Volumes for Postgres and Redis
volumes:
  postgres:
    name: pg-nest
  redis:
    name: redis-nest
